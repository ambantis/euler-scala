package net.euler

/**
 * Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
 * the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci
 * sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * User: Alexandros Bantis
 * Date: 1/23/13
 * Time: 9:15 PM
 */
object Problem002 {

  private lazy val fibs: Stream[Int] = {
    def f(a: Int, b: Int): Stream[Int] = a #:: f(b, a + b)
    f(1,2)
  }

  def sumEvenFibonacci(limit: Int) = fibs.filter(_ % 2 == 0).takeWhile(_ < limit).fold(0)(_ + _)
}
